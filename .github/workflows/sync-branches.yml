name: Sync Branches
on:
  push:
    branches:
      - main

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if push came from developer
        id: check_source
        run: |
            MERGE_COMMIT=$(git log -1 --pretty=%P)
            if [[ $(echo "$MERGE_COMMIT" | wc -w) -eq 2 ]]; then
              PARENT_BRANCH=$(git name-rev --name-only $(echo $MERGE_COMMIT | cut -d' ' -f2))
              if [[ $PARENT_BRANCH == *"developer"* ]]; then
                echo "skip_sync=true" >> $GITHUB_OUTPUT
              else
                echo "skip_sync=false" >> $GITHUB_OUTPUT
              fi
            else
              echo "skip_sync=false" >> $GITHUB_OUTPUT
            fi

      - name: Set up Git
        if: steps.check_source.outputs.skip_sync == 'false'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge main into developer
        if: steps.check_source.outputs.skip_sync == 'false'
        run: |
          git checkout developer || git checkout -b developer
          git pull origin developer
          git merge main --no-ff
          git push origin developer

      - name: Notify on conflict
        if: failure() && steps.check_source.outputs.skip_sync == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '⚠️ Merge conflict detected',
              body: 'A merge conflict was detected between `main` and `developer`. Please resolve it manually.',
            });